// Generated by view binder compiler. Do not edit!
package com.comas.foodies.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.comas.foodies.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecipeEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView editImageImgv;

  @NonNull
  public final EditText editRecipeDescET;

  @NonNull
  public final EditText editRecipeNamET;

  @NonNull
  public final Button editRecipeSaveBtn;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private FragmentRecipeEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView editImageImgv, @NonNull EditText editRecipeDescET,
      @NonNull EditText editRecipeNamET, @NonNull Button editRecipeSaveBtn,
      @NonNull TextView textView5, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.editImageImgv = editImageImgv;
    this.editRecipeDescET = editRecipeDescET;
    this.editRecipeNamET = editRecipeNamET;
    this.editRecipeSaveBtn = editRecipeSaveBtn;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecipeEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecipeEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recipe_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecipeEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_image_imgv;
      ImageView editImageImgv = ViewBindings.findChildViewById(rootView, id);
      if (editImageImgv == null) {
        break missingId;
      }

      id = R.id.edit_recipe_descET;
      EditText editRecipeDescET = ViewBindings.findChildViewById(rootView, id);
      if (editRecipeDescET == null) {
        break missingId;
      }

      id = R.id.edit_recipe_namET;
      EditText editRecipeNamET = ViewBindings.findChildViewById(rootView, id);
      if (editRecipeNamET == null) {
        break missingId;
      }

      id = R.id.edit_recipe_saveBtn;
      Button editRecipeSaveBtn = ViewBindings.findChildViewById(rootView, id);
      if (editRecipeSaveBtn == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new FragmentRecipeEditBinding((ConstraintLayout) rootView, editImageImgv,
          editRecipeDescET, editRecipeNamET, editRecipeSaveBtn, textView5, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
